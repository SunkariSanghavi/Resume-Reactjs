{"version":3,"sources":["image2.svg","resume.js","App.js","serviceWorker.js","index.js","image1.svg"],"names":["module","exports","resume","prop","info","data","profiles","location","id","className","basics","gender","src","profileIcon","alt","style","width","profileIcon1","name","fontStyle","role","href","mail","phone","address","summary","map","summaryValue","summaryIndex","key","education","educationValue","educationIndex","degree","institute","hobbies","hobbyValue","hobbyIndex","Example","Home","console","log","value","index","boxShadow","to","pathname","App","exact","path","component","Resume","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b7aeb28f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image2.169046d1.svg\";","import React from 'react';\r\nimport data from './data/data.json';\r\nimport profileIcon from './image1.svg';\r\nimport profileIcon1 from './image2.svg';\r\n\r\nlet resume=(prop)=>\r\n{\r\n    let info=data.profiles[prop.location.data.id];\r\n  return(\r\n      <div className=\"row justify-content-center\">\r\n          <div className=\"col-lg-3 m-2\">\r\n              <div className=\"card shadow\">\r\n                  <div className=\"card-body p-2 text-center\">\r\n                      {info.basics.gender===\"female1\" ? <img src={profileIcon} alt=\"Profile icon\" style={{width:\"30%\"}}/> : <img src={profileIcon1} alt=\"Profile icon\" style={{width:\"30%\"}}/>}\r\n                      <h2>{info.basics.name}</h2>\r\n                      <h5 className=\"text-secondary\" style={{fontStyle:\"italic\"}}> {info.basics.role}</h5> <hr />\r\n                      <a href={\"mailto:\"+info.basics.mail}> {info.basics.mail}</a> <br>\r\n                      </br>\r\n                      <a href={\"tel:\"+info.basics.phone}> {info.basics.phone}</a> <br />\r\n                      <p>{info.basics.address}</p>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <div className=\"col-lg-8 m-2\">\r\n          <div className=\"card shadow\">\r\n                  <div className=\"card-body\">\r\n                      <h3>Summary</h3>\r\n                      <hr />\r\n                      <ul>\r\n                          {\r\n                          info.summary.map((summaryValue,summaryIndex)=>\r\n                          (\r\n                            <li key={summaryIndex} > {summaryValue} </li>\r\n                          ))\r\n                        }\r\n                      </ul>\r\n                      <h3>Educational Qualifications</h3>\r\n                      <hr />\r\n                      <div className=\"table-responsive\">\r\n                          <table className=\"table\">\r\n                              <thead className=\"thead-dark\">\r\n                                  <th>Degree</th>\r\n                                  <th>Institution</th>\r\n                                  <th>CGPA/Percentage</th>\r\n                              </thead>\r\n                              <tbody>\r\n                                  {info.education.map((educationValue,educationIndex)=>\r\n                                  (\r\n                                      <tr key={educationIndex}>\r\n                                        <td>{educationValue.degree}</td>\r\n                                        <td>{educationValue.institute}</td>\r\n                                        <td>{educationValue[\"CGPA/Percentage\"]}</td>\r\n                                      </tr>\r\n                                  ))\r\n                                 }\r\n                              </tbody>\r\n                          </table>\r\n                      </div>\r\n                      <h3>Hobbies</h3>\r\n                      <hr />\r\n                      <ul>\r\n                          {\r\n                          info.hobbies.map((hobbyValue,hobbyIndex)=>\r\n                          (\r\n                            <li key={hobbyIndex} > {hobbyValue} </li>\r\n                          ))\r\n                        }\r\n                      </ul>\r\n                      \r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default resume;","import React from 'react';\nimport data from './data/data.json';\nimport profileIcon from './image1.svg';\nimport profileIcon1 from './image2.svg';\nimport {BrowserRouter,Route,Switch,Link} from 'react-router-dom';\nimport Resume from './resume.js';\n\nlet App=()=>{\n  \n  return(\n    \n      <BrowserRouter>\n        <Switch>\n        <Route exact path='/sample' component={Example}/>        \n        <Route exact path='/' component={Home} />\n        <Route exact path='/resume' component={Resume} />\n        </Switch>\n      </BrowserRouter>\n   \n  ) //if in path /sample is executed..then Example component is displayed..else home is displayed.\n}\nlet Example=()=>{\n  return(\n    <div>\n      <h2> Example component</h2>\n    </div>\n  )\n}\nlet Home=()=>{\n  let profiles=data.profiles;\n  console.log(profiles);\n  return(\n    <div className=\"row justify-content-center\">\n    {profiles.map((value,index)=>(\n      <div className=\"col-lg-4 col-md-4 col-sm-10 mt-1\" key={index}>\n      {/* Card */}\n      <div className=\"card\" style={{boxShadow:\"0px 8px 8px -8px #000\"}}>\n          <div className=\"card-body text-center\">\n            {/* <img src={profileIcon} alt=\"Profile icon\" style={{width:\"30%\"}}/> */}\n            {value.basics.gender===\"female1\" ? <img src={profileIcon} alt=\"Profile icon\" style={{width:\"30%\"}}/> : <img src={profileIcon1} alt=\"Profile icon\" style={{width:\"30%\"}}/>}\n            <h3> {value.basics.name} </h3>\n            <h5 className=\"text-secondary\" style={{fontStyle:\"italic\"}}> {value.basics.role}</h5> <hr />\n            <a href={\"mailto:\"+value.basics.mail}> {value.basics.mail}</a> <br>\n            </br>\n  <a href={\"tel:\"+value.basics.phone}> {value.basics.phone}</a> <br />\n  <Link to={{pathname:'/resume',data:{id:index}}} className=\"btn btn-secondary text-white btn-block btn-sm\"> View profile</Link>\n          </div>\n      </div>\n    </div>\n  ))}\n  </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/image1.27c8b601.svg\";"],"sourceRoot":""}